{"name":"Optical-flow-computation","tagline":"Optical Flow Calculation using corner detection followed by motion estimation ","body":"### Introducing to a unique approach to Optical Flow Computation.\r\n\r\nIn motion estimation using SAD based block matching algorithm, successive frames of the video are divided into blocks of predetermined sizes and then each block in the current frame is compared to the respective search area in the previous frame to determine the corresponding block. This is a very compute intensive approach and might provide motion estimation values of background creating ambiguity in the results.\r\n\r\nThis project gets down to compute the optical flow by integrating FAST ( Features from Accelerated Segment Test ) corner detection algorithm followed by SAD ( Sum of Absolute Differences ) based motion estimation algorithm.\r\nThe FAST corner detection algorithm selecta the areas of interest in the image and Block Matching is then only performed on blocks containing these corner points. This provides us with motion vectors around the object in the foreground and thus reducing the block matching computation.\r\n\r\n### Environment\r\nThe algorithm presented has been developed using C++ and OpenCV (ver 2.4.11) on a Mac OS X Yosemite.\r\n\r\nIf you are using Mac, you can simply install opencv using Homebrew package manager.\r\n\r\nTo install OpenCV using Homebrew,\r\n```\r\n$ brew install opencv\r\n```\r\nTo check the version of the OpenCV installed, enter\r\n```\r\n$ brew info opencv\r\n```\r\nTo upgade the already existing version of the OpenCV installed, use:\r\n```\r\n$ brew upgrade opencv\r\n```\r\nPS - You need to install the Command Line Tools for the programs to work. \r\n\r\n### Try it Out\r\nYou can download the source and try the code for yourself. And you could also change the parameters like video size, block size for SAD, etc. You can use your webcam for the video input or can provide a video file and check the results.\r\n\r\n### Author\r\nVrishbhan Sisodia (@vrishbhan), is a Hardware Design Engineer with a Master's Degree in Electrical Engineering. His specialization include ASIC Design and Verification using SystemVerilog. He is a DIY enthusiast and an avid learner. \r\n\r\n##### _This project was done as a part of graduate program under the valuabe guidance of Dr. Charles Choo, Professor of Electrical Engineering at San Jose State University._\r\n\r\n*This Page is still under development and I'll add more information over time.*\r\n","google":"UA-63905901-1","note":"Don't delete this file! It's used internally to help with page regeneration."}